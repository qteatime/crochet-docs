unknown
=======

::

    type unknown(...) is any;

A sealed type for any value in Crochet.

Values can be wrapped in ``unknown`` to pass them around without granting
any capabilities. This gives Crochet a stronger gradual-typing guarantee,
but at the cost of being practical; values must be explicitly sealed and
unsealed.

The unknown type is also used for exposing native values to Crochet code,
without having to conform those values to Crochet's own memory model. For
example, an arbitrary JavaScript class can be passed around in Crochet
code without any issues if it's wrapped in ``unknown``.


Sealing
-------

A value can be turned into unknown by casting it---this is known as "sealing"::

    1 as unknown

Will put the value ``1`` inside of the unknown box. This can then be
passed around without leaking knowledge of the value.

Double-sealing is not possible---trying to seal an unknown value will just
propagate it.


Unsealing
---------

An unknown value can have its value extracted by casting it to the right
type---this is known as "unsealing"::

    (1 as unknown) as integer

Will first put ``1`` inside of the unknown box, and then take it out of
the unknown box. The type we cast the value to has to match the type of
the value inside of the unknown box.